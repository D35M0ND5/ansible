    
    # - name: Load package list
    #   include_vars:
    #     file: pkglist.txt
    #     name: package_list

    # - name: Load aur package list
    #   include_vars:
    #     file: aur_pkglist.txt
    #     name: package_list_aur

    - name: Install base packages
      pacman:
        name: "{{ item }}"
        state: present
      with_items: "{{ lookup('file', 'pkglist.txt').splitlines() }}"       
      retries: 3
      delay: 10  # Seconds between retries

    - name: Install AUR packages securely
      block:
        # 1. Setup environment
        - name: Create build directory in user's home
          file:
            path: "/home/{{ user }}/aur_builds"
            state: directory
            mode: '0755'
            owner: "{{ user }}"
            group: "{{ user }}"
          become: true

        # 2. Install packages
        - name: Process AUR packages
          block:
            - name: Clone and build AUR packages
              command: >
                bash -c '
                git clone https://aur.archlinux.org/{{ item }}.git /home/{{ user }}/aur_builds/{{ item }} &&
                cd /home/{{ user }}/aur_builds/{{ item }} &&
                makepkg -si --noconfirm --needed'
              args:
                creates: "/usr/bin/{{ item | regex_replace('-bin$', '') }}"
              loop: "{{ lookup('file', 'aur_pkglist.txt').splitlines() | select('match', '^[a-zA-Z0-9-]+$') | list }}"
              become: true
              environment:
                HOME: "/home/{{ user }}"
                PKGDEST: "/home/{{ user }}/aur_builds"
              register: aur_results
              ignore_errors: yes
              changed_when: aur_results.rc == 0

          rescue:
            - name: Clean failed builds
              file:
                path: "/home/{{ user }}/aur_builds/{{ item }}"
                state: absent
              loop: "{{ lookup('file', 'aur_pkglist.txt').splitlines() }}"
              become: false

        # 3. Final cleanup
        - name: Remove build directory
          file:
            path: "/home/{{ user }}/aur_builds"
            state: absent
          become: false
          when: aur_results is defined